/*
 * jpeg jpu utils
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

#ifndef HISI_JPU_UTILS_H
#define HISI_JPU_UTILS_H

#include <media/camera/jpeg/jpeg_base.h>
#include <soc_pctrl_interface.h>
#include <soc_sctrl_interface.h>
#include <soc_pmctrl_interface.h>
#include <soc_media1_crg_interface.h>

#define REG_SET_32_BIT 32
#define REG_SET_30_BIT 30
#define REG_SET_29_BIT 29
#define REG_SET_28_BIT 28
#define REG_SET_25_BIT 25
#define REG_SET_24_BIT 24
#define REG_SET_20_BIT 20
#define REG_SET_16_BIT 16
#define REG_SET_14_BIT 14
#define REG_SET_7_BIT 7
#define REG_SET_6_BIT 6
#define REG_SET_4_BIT 4
#define REG_SET_2_BIT 2
#define SHIFT_32_BIT 32
#define SHIFT_16_BIT 16
#define SHIFT_12_BIT 12
#define SHIFT_8_BIT 8
#define SHIFT_4_BIT 4

#define SOC_PCTRL_PERI_STAT49_ADDR_MTCMOS_ON(base) \
	outp32(SOC_PCTRL_PERI_STAT49_ADDR(base), 0x00000020)
#define SOC_PCTRL_PERI_CTRL102_ADDR_NENSD_OFF(base) \
	outp32(SOC_PCTRL_PERI_CTRL102_ADDR(base), 0x10000000)
#define SOC_PCTRL_PERI_STAT3_ADDR_UNRST(base) \
	outp32(SOC_PCTRL_PERI_STAT3_ADDR(base), 0x00040000)
#define SOC_PCTRL_RESOURCE1_UNLOCK_ADDR_CLK_ENABLE(base) \
	outp32(SOC_PCTRL_RESOURCE1_UNLOCK_ADDR(base), 0x3C002028)
#define SOC_SCTRL_SCPEREN4_ADDR_CLK_ENABLE(base) \
	outp32(SOC_SCTRL_SCPEREN4_ADDR(base), 0x00000040)
#define SOC_PCTRL_PERI_CTRL15_ADDR_CLK_ENABLE(base) \
	outp32(SOC_PCTRL_PERI_CTRL15_ADDR(base), 0x00000040)
#define SOC_PCTRL_RESOURCE2_LOCK_ST_ADDR_CLK_ENABLE(base) \
	outp32(SOC_PCTRL_RESOURCE2_LOCK_ST_ADDR(base), 0x00000040)
#define SOC_PCTRL_RESOURCE1_LOCK_ST_ADDR_CLK_DISABLE(base) \
	outp32(SOC_PCTRL_RESOURCE1_LOCK_ST_ADDR(base), 0x3C002028)
#define SOC_SCTRL_SCPERDIS4_ADDR_CLK_DISABLE(base) \
	outp32(SOC_SCTRL_SCPERDIS4_ADDR(base), 0x00000040)
#define SOC_PCTRL_PERI_CTRL16_ADDR_CLK_DISABLE(base) \
	outp32(SOC_PCTRL_PERI_CTRL16_ADDR(base), 0x00000040)
#define SOC_PCTRL_RESOURCE3_LOCK_ADDR_CLK_DISABLE(base) \
	outp32(SOC_PCTRL_RESOURCE3_LOCK_ADDR(base), 0x00000040)
#define SOC_PCTRL_PERI_STAT47_ADDR_ISO_DISABLE(base) \
	outp32(SOC_PCTRL_PERI_STAT47_ADDR(base), 0x00000040)
#define SOC_PCTRL_PERI_STAT3_ADDR_UNRST1(base) \
	outp32(SOC_PCTRL_PERI_STAT3_ADDR(base), 0x00020000)
#define SOC_MEDIA1_CRG_CLKDIV9_ADDR_ENABLE(base) \
	outp32(SOC_MEDIA1_CRG_CLKDIV9_ADDR(base), 0x00080008)
#define SOC_MEDIA1_CRG_PERDIS0_ADDR_CLK_DISABLE(base) \
	outp32(SOC_MEDIA1_CRG_PERDIS0_ADDR(base), 0x08040040)
#define SOC_PMCTRL_NOC_POWER_IDLEREQ_0_ADDR_CLEAR(base) \
	outp32(SOC_PMCTRL_NOC_POWER_IDLEREQ_0_ADDR(base), 0x80000000)
#define SOC_PMCTRL_PERI_CTRL0_ADDR_CLEAR(base) \
	outp32(SOC_PMCTRL_PERI_CTRL0_ADDR(base), 0x80000000)
#define SOC_PCTRL_RESOURCE1_UNLOCK_ADDR_ENABLE(base) \
	outp32(SOC_PCTRL_RESOURCE1_UNLOCK_ADDR(base), 0x7C002028)
#define SOC_PCTRL_RESOURCE1_LOCK_ST_ADDR_DISABLE(base) \
	outp32(SOC_PCTRL_RESOURCE1_LOCK_ST_ADDR(base), 0x7C002028)
#define SOC_MEDIA1_CRG_PERDIS0_ADDR_DISABLE(base) \
	outp32(SOC_MEDIA1_CRG_PERDIS0_ADDR(base), 0x00040040)
#define SOC_PCTRL_PERI_STAT49_ADDR_MTCMOS_ON_V501(base) \
	outp32(SOC_PCTRL_PERI_STAT49_ADDR(base), 0x1)
#define SOC_PCTRL_PERI_CTRL102_ADDR_SD_OFF_V501(base) \
	outp32(SOC_PCTRL_PERI_CTRL102_ADDR(base), 0x08000000)
#define SOC_MEDIA1_CRG_PERRSTDIS0_ADDR_UNRST(base) \
	outp32(SOC_MEDIA1_CRG_PERRSTDIS0_ADDR(base), 0x04000000)
#define SOC_MEDIA1_CRG_CLKDIV9_ADDR_ENABLE_V501(base) \
	outp32(SOC_MEDIA1_CRG_CLKDIV9_ADDR(base), 0x34443444)
#define SOC_MEDIA1_CRG_PEREN1_ADDR_ENABLE(base) \
	outp32(SOC_MEDIA1_CRG_PEREN1_ADDR(base), 0x1E198200)
#define SOC_MEDIA1_CRG_PEREN0_ADDR_ENABLE(base) \
	outp32(SOC_MEDIA1_CRG_PEREN0_ADDR(base), 0x00402200)
#define SOC_MEDIA1_CRG_PERDIS1_ADDR_DISABLE(base) \
	outp32(SOC_MEDIA1_CRG_PERDIS1_ADDR(base), 0x1E018200)
#define SOC_PCTRL_PERI_STAT47_ADDR_DISABLE_V501(base) \
	outp32(SOC_PCTRL_PERI_STAT47_ADDR(base), 0x00000001)
#define SOC_MEDIA1_CRG_PERRSTDIS0_ADDR_UNRST1(base) \
	outp32(SOC_MEDIA1_CRG_PERRSTDIS0_ADDR(base), 0x01E08000)
#define SOC_MEDIA1_CRG_PERRSTDIS1_ADDR_UNRST(base) \
	outp32(SOC_MEDIA1_CRG_PERRSTDIS1_ADDR(base), 0x0000000C)
#define SOC_MEDIA1_CRG_PEREN1_ADDR_ENABLE1(base) \
	outp32(SOC_MEDIA1_CRG_PEREN1_ADDR(base), 0x1E018200)
#define SOC_PMCTRL_NOC_POWER_IDLEREQ_0_ADDR_V501(base) \
	outp32(SOC_PMCTRL_NOC_POWER_IDLEREQ_0_ADDR(base), 0x00200000)
#define SOC_MEDIA1_CRG_PERDIS0_ADDR_V501(base) \
	outp32(SOC_MEDIA1_CRG_PERDIS0_ADDR(base), 0x00402200)
#define SOC_MEDIA1_CRG_PERRSTDIS_ISP_SEC_ADDR_V501(base) \
	outp32(SOC_MEDIA1_CRG_PERRSTDIS_ISP_SEC_ADDR(base), 0x00000001)
#define SOC_MEDIA1_CRG_PEREN0_ADDR_ISP_SRT(base) \
	outp32(SOC_MEDIA1_CRG_PEREN0_ADDR(base), 0x00402000)
#define SOC_MEDIA1_CRG_CLKDIV9_ADDR_ENABLE_V500(base) \
	outp32(SOC_MEDIA1_CRG_CLKDIV9_ADDR(base), 0x30003000)
#define SOC_MEDIA1_CRG_PEREN1_ADDR_ENABLE_V500(base) \
	outp32(SOC_MEDIA1_CRG_PEREN1_ADDR(base), 0x1E198000)
#define SOC_MEDIA1_CRG_PERDIS1_ADDR_DISABLE_V500(base) \
	outp32(SOC_MEDIA1_CRG_PERDIS1_ADDR(base), 0x1E018000)
#define SOC_MEDIA1_CRG_PERRSTDIS0_ADDR_UNRST_V500(base) \
	outp32(SOC_MEDIA1_CRG_PERRSTDIS0_ADDR(base), 0x01E00000)
#define SOC_MEDIA1_CRG_PEREN1_ADDR_ENABLE1_V500(base) \
	outp32(SOC_MEDIA1_CRG_PEREN1_ADDR(base), 0x1E018000)
#define SOC_PMCTRL_PERI_CTRL0_ADDR_V500(base) \
	outp32(SOC_PMCTRL_PERI_CTRL0_ADDR(base), 0x00200000)

#define MEDIA1_CLK_ENABLE 0x08040040
#define MEDIA1_OTHERS_CLK_ENABLE 0x00040040
#define AXI_JPEG_CVDR_WR_QOS_CFG_VAL 0x10333311
#define AXI_JPEG_NR_RD_STOP 0x01000000
#define JPEGDEC_TPSRAM_2PRF_TRA 0x00010000
#define JPEGDEC_FAMA_PTW_MSB 0x0000007F
#define JPEGDEC_DECODE_START_DISABLE 0x80000001
#define JPEGDEC_FAMA_PTW_MID 0x80
#define JPGDEC_EVEN_NUM 2

#endif /* HISI_JPU_UTILS_H */